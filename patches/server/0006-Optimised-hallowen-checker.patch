From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ivan Pekov <ivan@mrivanplays.com>
Date: Mon, 4 Jan 2021 20:12:36 +0200
Subject: [PATCH] Optimised hallowen checker

Original code by Yatopia, licensed under MIT License

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 216d0efa734eb0fd7b95ad1ad40c94b1a727e0b6..45343a9ba316a30596c147781d5000c623e6eed0 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1533,6 +1533,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         }
         // Paper end
 
+        org.sugarcanemc.sugarcane.util.entity.HalloweenChecker.tick(); // Sugarcane
         com.tuinity.tuinity.util.CachedLists.reset(); // Tuinity
         // Paper start
         long endTime = System.nanoTime();
diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index e749f0f3a35783cada224e4b0c12f294c3245210..0931abb82a70758ea9bbace703b2d5dbf66817c4 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -315,10 +315,12 @@ public class Bat extends AmbientCreature {
     }
 
     // Airplane start - only check for spooky season once an hour
-    private static boolean isSpookySeason = false;
-    private static final int ONE_HOUR = 20 * 60 * 60;
-    private static int lastSpookyCheck = -ONE_HOUR;
+    // Sugarcane start - optimised halloween checker
+    // private static boolean isSpookySeason = false;
+    // private static final int ONE_HOUR = 20 * 60 * 60;
+    // private static int lastSpookyCheck = -ONE_HOUR;
     private static boolean isHalloween() {
+        /*
         if (net.minecraft.server.MinecraftServer.currentTick - lastSpookyCheck > ONE_HOUR) {
         LocalDate localdate = LocalDate.now();
         int i = localdate.get(ChronoField.DAY_OF_MONTH);
@@ -328,6 +330,9 @@ public class Bat extends AmbientCreature {
         lastSpookyCheck = net.minecraft.server.MinecraftServer.currentTick;
         }
         return isSpookySeason;
+         */
+        return org.sugarcanemc.sugarcane.util.entity.HalloweenChecker.isHalloweenSeason();
+        // Sugarcane end
     }
     // Airplane end
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java b/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java
index 5b19d8db09867791782c899d41d314c511f6c8a2..b087230c8aea614c12970b9d27bc604947946c97 100644
--- a/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/AbstractSkeleton.java
@@ -138,11 +138,16 @@ public abstract class AbstractSkeleton extends Monster implements RangedAttackMo
         this.reassessWeaponGoal();
         this.setCanPickUpLoot(this.level.paperConfig.skeletonsAlwaysCanPickUpLoot || this.random.nextFloat() < 0.55F * difficulty.getSpecialMultiplier()); // Paper
         if (this.getItemBySlot(EquipmentSlot.HEAD).isEmpty()) {
+            // Sugarcane start - optimised halloween checker
+            /*
             LocalDate localdate = LocalDate.now();
             int i = localdate.get(ChronoField.DAY_OF_MONTH);
             int j = localdate.get(ChronoField.MONTH_OF_YEAR);
 
             if (j == 10 && i == 31 && this.random.nextFloat() < 0.25F) {
+             */
+            if (org.sugarcanemc.sugarcane.util.entity.HalloweenChecker.isHalloweenDay() && this.random.nextFloat() < 0.25F) {
+                // Sugarcane end
                 this.setItemSlot(EquipmentSlot.HEAD, new ItemStack(this.random.nextFloat() < 0.1F ? Blocks.JACK_O_LANTERN : Blocks.CARVED_PUMPKIN));
                 this.armorDropChances[EquipmentSlot.HEAD.getIndex()] = 0.0F;
             }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 40f2fd62b1d36843c5539932d2fb2496009fee21..3094784a4b7bc3b052493d16fcc3b1c2e92e6295 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -563,11 +563,16 @@ public class Zombie extends Monster {
         }
 
         if (this.getItemBySlot(EquipmentSlot.HEAD).isEmpty()) {
+            // Sugarcane start - optimised halloween checker
+            /*
             LocalDate localdate = LocalDate.now();
             int i = localdate.get(ChronoField.DAY_OF_MONTH);
             int j = localdate.get(ChronoField.MONTH_OF_YEAR);
 
             if (j == 10 && i == 31 && this.random.nextFloat() < 0.25F) {
+             */
+            if (org.sugarcanemc.sugarcane.util.entity.HalloweenChecker.isHalloweenDay() && this.random.nextFloat() < 0.25F) {
+                // Sugarcane end
                 this.setItemSlot(EquipmentSlot.HEAD, new ItemStack(this.random.nextFloat() < 0.1F ? Blocks.JACK_O_LANTERN : Blocks.CARVED_PUMPKIN));
                 this.armorDropChances[EquipmentSlot.HEAD.getIndex()] = 0.0F;
             }
diff --git a/src/main/java/org/sugarcanemc/sugarcane/util/entity/HalloweenChecker.java b/src/main/java/org/sugarcanemc/sugarcane/util/entity/HalloweenChecker.java
new file mode 100644
index 0000000000000000000000000000000000000000..239779bfd8a200b3bed6715a89573312c6505aca
--- /dev/null
+++ b/src/main/java/org/sugarcanemc/sugarcane/util/entity/HalloweenChecker.java
@@ -0,0 +1,59 @@
+package org.sugarcanemc.sugarcane.util.entity;
+
+import java.time.LocalDate;
+import java.time.temporal.ChronoField;
+import net.minecraft.server.MinecraftServer;
+
+/**
+ * Entity halloween checker
+ * <p>
+ * Checks whether or not it is halloween at a specific rate rather than every time when
+ * a entity is being spawned.
+ * <p>
+ * The rate changes depending on how much TPS the server has. By default, the rate is every
+ * 2 hours, or every 144k ticks (if the server has _that_ much uptime)
+ *
+ * @author MrIvanPlays
+ */
+public class HalloweenChecker {
+
+    private static boolean halloweenSeason = false;
+    private static boolean halloweenDay = false;
+
+    private static int delay = (20 * 60 * 60) * 2;
+    private static int lastCheckTick = -delay;
+
+    public static void tick() {
+        if (MinecraftServer.currentTick % 100 == 0) {
+            // update the delay every 100 ticks
+            if (MinecraftServer.TPS >= 20) {
+                delay = (20 * 60 * 60) * 2;
+            }
+            if (MinecraftServer.TPS < 15) {
+                delay = delay + (20 * 60 * 15);
+            }
+            if (MinecraftServer.TPS < 10) {
+                delay = delay + (20 * 60 * 30);
+            }
+        }
+        if (MinecraftServer.currentTick - lastCheckTick > delay) {
+            LocalDate now = LocalDate.now();
+            int day = now.getDayOfMonth();
+            int month = now.get(ChronoField.MONTH_OF_YEAR);
+
+            halloweenDay = (month == 10) && (day == 31);
+            halloweenSeason = ((month == 10) && (day >= 20)) || ((month == 11) && (day <= 3));
+
+            lastCheckTick = MinecraftServer.currentTick;
+        }
+    }
+
+    public static boolean isHalloweenSeason() {
+        return halloweenSeason;
+    }
+
+    public static boolean isHalloweenDay() {
+        return halloweenDay;
+    }
+
+}
