From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ishland <ishlandMC@yeah.net>
Date: Wed, 27 Jan 2021 20:16:47 +0800
Subject: [PATCH] Preload ProtocolLib EnumWrappers

Original code by Yatopia, licensed under MIT License

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 6ae2c73bb60ffa2c4c77dee06e0a701077139ffc..8f7f95d8c6fef6f122ccbfc1635e1b6bee4feeb6 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1210,6 +1210,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 LOGGER.info("Done ({})! For help, type \"help\"", doneTime);
                 // Paper end
 
+                if (org.sugarcanemc.sugarcane.config.SugarcaneConfig.fixProtocolLib) org.sugarcanemc.sugarcane.util.compatibility.PreloadProtocolLib.run(); // Sugarcane - Preload ProtocolLib's Enum Wrappers
                 com.tuinity.tuinity.config.TuinityConfig.createWorldSections = false; // Tuinity - don't let plugin created worlds fill our config
                 org.spigotmc.WatchdogThread.tick(); // Paper
                 org.spigotmc.WatchdogThread.hasStarted = true; // Paper
diff --git a/src/main/java/org/sugarcanemc/sugarcane/config/SugarcaneConfig.java b/src/main/java/org/sugarcanemc/sugarcane/config/SugarcaneConfig.java
index 43d1d720980450a00d3743ecbda3a79b680b4723..af82dc8844286f54cb2e1023b6b793f5bf00d7f2 100644
--- a/src/main/java/org/sugarcanemc/sugarcane/config/SugarcaneConfig.java
+++ b/src/main/java/org/sugarcanemc/sugarcane/config/SugarcaneConfig.java
@@ -105,6 +105,7 @@ public class SugarcaneConfig {
 
 	public static boolean disableEntityStuckChecks;
 	public static String brandName;
+	public static boolean fixProtocolLib;
 
 	private static void settings() {
 		config.setComment("brand-name", "Here you can set what should your server display as it's brand name", "NOTE: This settings overrides the purpur's server-mod-name setting");
@@ -116,4 +117,10 @@ public class SugarcaneConfig {
 		disableEntityStuckChecks = config.getBoolean("checks.disable-entity-stuck-checks", false);
 
 	}
+
+	private static void protocolLib() {
+		config.setComment("protocolLib", "The setting below fixes ProtocolLib causing rare NPE's by preloading it's enum wrappers");
+
+		fixProtocolLib = config.getBoolean("protocolLib.fix-protocollib", true);
+	}
 }
\ No newline at end of file
diff --git a/src/main/java/org/sugarcanemc/sugarcane/util/compatibility/PreloadProtocolLib.java b/src/main/java/org/sugarcanemc/sugarcane/util/compatibility/PreloadProtocolLib.java
new file mode 100644
index 0000000000000000000000000000000000000000..ca1c0369e0bd91b77fcafb0c4eccb3b5f778da0e
--- /dev/null
+++ b/src/main/java/org/sugarcanemc/sugarcane/util/compatibility/PreloadProtocolLib.java
@@ -0,0 +1,28 @@
+package org.sugarcanemc.sugarcane.util.compatibility;
+
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.Bukkit;
+import org.bukkit.plugin.Plugin;
+import org.bukkit.plugin.SimplePluginManager;
+
+import java.lang.reflect.Method;
+
+public class PreloadProtocolLib {
+
+    public synchronized static void run() {
+        try {
+            final SimplePluginManager pluginManager = (SimplePluginManager) Bukkit.getPluginManager();
+            final Plugin protocolLib = pluginManager.getPlugin("ProtocolLib");
+            if(protocolLib != null && protocolLib.isEnabled()) {
+                MinecraftServer.LOGGER.info("Sugarcane: Attempting to fix ProtocolLib");
+                final Method initialize = Class.forName("com.comphenix.protocol.wrappers.EnumWrappers", true, protocolLib.getClass().getClassLoader()).getDeclaredMethod("initialize");
+                initialize.setAccessible(true);
+                initialize.invoke(null);
+                synchronized (PreloadProtocolLib.class) {
+                }
+            }
+        } catch (Throwable t) {
+            MinecraftServer.LOGGER.warn("Unable to fix ProtocolLib", t);
+        }
+    }
+}
