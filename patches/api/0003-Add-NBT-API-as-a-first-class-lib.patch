From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: tr7zw <tr7zw@live.de>
Date: Thu, 2 Apr 2020 18:49:38 +0200
Subject: [PATCH] Add NBT API as a first-class lib

From Yatopia

diff --git a/build.gradle.kts b/build.gradle.kts
index a10a2a6581c9be8b4c6d8f468f4a8955ce163af4..bbf600a7146bc42b9c0a3349ea3ee4f0719919a4 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -3,6 +3,7 @@ import java.util.Locale
 plugins {
     `java-library`
     `maven-publish`
+    id("com.github.johnrengelman.shadow")
 }
 
 java {
@@ -31,6 +32,7 @@ dependencies {
     api("org.apache.logging.log4j:log4j-api:2.14.1") // Paper
     api("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT") // Purpur
     api("com.mojang:authlib:2.3.31") // Sugarcane
+    api("de.tr7zw:item-nbt-api:2.8.0") // Sugarcane
 
     compileOnly("org.apache.maven:maven-resolver-provider:3.8.1")
     compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.7.0")
@@ -72,6 +74,9 @@ tasks.jar {
     }
 }
 
+tasks.shadowJar {
+    relocate("de.tr7zw.changeme.nbtapi", "de.tr7zw.nbtapi")
+}
 tasks.withType<Javadoc>().configureEach {
     (options as StandardJavadocDocletOptions).links(
         "https://guava.dev/releases/21.0/api/docs/",
diff --git a/src/main/java/org/bukkit/Chunk.java b/src/main/java/org/bukkit/Chunk.java
index 98263d896f316983609432c45b85401a2692432d..09e0c62e1ef36dc842c163e69e8fde9e55531ec3 100644
--- a/src/main/java/org/bukkit/Chunk.java
+++ b/src/main/java/org/bukkit/Chunk.java
@@ -275,4 +275,16 @@ public interface Chunk extends PersistentDataHolder {
      * @return if the block is contained within
      */
     boolean contains(@NotNull BlockData block);
+
+    // Sugarcane start
+    /**
+     * Returns a custom tag container of this chunk.
+     *
+     * @return custom NBT tags container
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getNBTC() {
+        return new de.tr7zw.changeme.nbtapi.NBTChunk(this).getPersistentDataContainer();
+    }
+    // Sugarcane end
 }
diff --git a/src/main/java/org/bukkit/block/TileState.java b/src/main/java/org/bukkit/block/TileState.java
index 3b10fcc13893403b29f0260b8605144679e89b82..18a70e1131c117d49448734a5ae96b8b04b70ce2 100644
--- a/src/main/java/org/bukkit/block/TileState.java
+++ b/src/main/java/org/bukkit/block/TileState.java
@@ -36,4 +36,26 @@ public interface TileState extends BlockState, PersistentDataHolder {
     @NotNull
     @Override
     PersistentDataContainer getPersistentDataContainer();
+
+    // Sugarcane start
+    /**
+     * Returns NBT representation of this tile entity.
+     *
+     * @return vanilla NBT tags container
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTTileEntity getNBT() {
+        return new de.tr7zw.changeme.nbtapi.NBTTileEntity(this);
+    }
+
+    /**
+     * Returns a custom tag container of this tile entity.
+     *
+     * @return custom NBT tags container
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getNBTC() {
+        return getNBT().getPersistentDataContainer();
+    }
+    // Sugarcane end
 }
diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index c9d64da90a05f252d91dd10d2d5f62ba66afb944..d290bb18c997579b9aa00f808c4794aa9c5890c4 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -190,6 +190,27 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
     }
     // Paper end
 
+    // Sugarcane start
+    /**
+     * Returns NBT representation of this entity.
+     *
+     * @return vanilla NBT tags container
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTEntity getNBT() {
+        return new de.tr7zw.changeme.nbtapi.NBTEntity(this);
+    }
+
+    /**
+     * Returns a custom tag container of this entity.
+     *
+     * @return custom NBT tags container
+     */
+    @NotNull
+    default de.tr7zw.changeme.nbtapi.NBTCompound getNBTC() {
+        return getNBT().getPersistentDataContainer();
+    }
+    // Sugarcane end
     /**
      * Returns a list of entities within a bounding box centered around this
      * entity
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index ac2967eac165d74c8ee7e0e9ac63124a10851a0e..21ea323d761d5fca213fae5760e4301f6b2f7988 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -579,6 +579,43 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, net.kyor
     }
     // Paper end
 
+    // Sugarcane start
+    /**
+     * Returns NBT representation of this item. The ItemStack will be cloned!
+     *
+     * @return item's NBT tags container
+     */
+    @NotNull
+    public de.tr7zw.changeme.nbtapi.NBTItem getNBT() {
+        return getNBT(false);
+    }
+
+    /**
+    * Returns NBT representation of this item. If directApply is true,
+    * all changes will be mapped to the original item. Changes to the NBTItem will
+    * overwrite changes done to the original item in that case.
+    *
+    * @param directApply if true, changes to NBTItem will affect this ItemStack
+    * @return item's NBT tags container
+    */
+    @NotNull
+    public de.tr7zw.changeme.nbtapi.NBTItem getNBT(boolean directApply) {
+        return new de.tr7zw.changeme.nbtapi.NBTItem(this, directApply);
+    }
+
+    /**
+     * Applies NBT data from the provided NBT item.
+     *
+     * @param nbt ItemStack's NBT container
+     */
+    public void setNBT(@NotNull de.tr7zw.changeme.nbtapi.NBTItem nbt) {
+        ItemStack nbtItem = nbt.getItem();
+        setType(nbtItem.getType());
+        setAmount(nbtItem.getAmount());
+        setData(nbtItem.getData());
+        setItemMeta(nbtItem.getItemMeta());
+    }
+    // Sugarcane end
     /**
      * Get a copy of this ItemStack's {@link ItemMeta}.
      *
